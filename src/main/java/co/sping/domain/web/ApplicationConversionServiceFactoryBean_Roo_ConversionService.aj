// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package co.sping.domain.web;

import co.sping.domain.ITT;
import co.sping.domain.Inform;
import co.sping.domain.Newnew;
import co.sping.domain.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<ITT, String> ApplicationConversionServiceFactoryBean.getITTToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<co.sping.domain.ITT, java.lang.String>() {
            public String convert(ITT iTT) {
                return new StringBuilder().append(iTT.getDayly()).toString();
            }
        };
    }
    
    public Converter<Long, ITT> ApplicationConversionServiceFactoryBean.getIdToITTConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, co.sping.domain.ITT>() {
            public co.sping.domain.ITT convert(java.lang.Long id) {
                return ITT.findITT(id);
            }
        };
    }
    
    public Converter<String, ITT> ApplicationConversionServiceFactoryBean.getStringToITTConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, co.sping.domain.ITT>() {
            public co.sping.domain.ITT convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ITT.class);
            }
        };
    }
    
    public Converter<Inform, String> ApplicationConversionServiceFactoryBean.getInformToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<co.sping.domain.Inform, java.lang.String>() {
            public String convert(Inform inform) {
                return new StringBuilder().append(inform.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Inform> ApplicationConversionServiceFactoryBean.getIdToInformConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, co.sping.domain.Inform>() {
            public co.sping.domain.Inform convert(java.lang.Long id) {
                return Inform.findInform(id);
            }
        };
    }
    
    public Converter<String, Inform> ApplicationConversionServiceFactoryBean.getStringToInformConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, co.sping.domain.Inform>() {
            public co.sping.domain.Inform convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Inform.class);
            }
        };
    }
    
    public Converter<Newnew, String> ApplicationConversionServiceFactoryBean.getNewnewToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<co.sping.domain.Newnew, java.lang.String>() {
            public String convert(Newnew newnew) {
                return new StringBuilder().append(newnew.getNum()).toString();
            }
        };
    }
    
    public Converter<Long, Newnew> ApplicationConversionServiceFactoryBean.getIdToNewnewConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, co.sping.domain.Newnew>() {
            public co.sping.domain.Newnew convert(java.lang.Long id) {
                return Newnew.findNewnew(id);
            }
        };
    }
    
    public Converter<String, Newnew> ApplicationConversionServiceFactoryBean.getStringToNewnewConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, co.sping.domain.Newnew>() {
            public co.sping.domain.Newnew convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Newnew.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getITTToStringConverter());
        registry.addConverter(getIdToITTConverter());
        registry.addConverter(getStringToITTConverter());
        registry.addConverter(getInformToStringConverter());
        registry.addConverter(getIdToInformConverter());
        registry.addConverter(getStringToInformConverter());
        registry.addConverter(getNewnewToStringConverter());
        registry.addConverter(getIdToNewnewConverter());
        registry.addConverter(getStringToNewnewConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
